# Role Creation - roboshop-junior, for pods to "get", "watch", "list"
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: roboshop
  name: roboshop-trainee
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"] # nouns
  verbs: ["get", "watch", "list"] # actions

---
# Role Creation - roboshop-junior, for pods to "get", "watch", "list","create" and deployments to "get", "list", "watch", "create", "update", "patch", "delete"
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: roboshop
  name: roboshop-junior
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"] # nouns
  verbs: ["get", "watch", "list","create"] # actions
- apiGroups: ["apps"]
  #
  # at the HTTP level, the name of the resource for accessing Deployment
  # objects is "deployments"
  resources: ["deployments"]
  verbs: ["get", "list", "watch", "create", "update", "patch", "delete"]
---
# Role Creation - roboshop-lead, for all
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: roboshop
  name: roboshop-lead
rules:
- apiGroups: ["*"] # "" indicates the core API group
  resources: ["*"] # nouns
  verbs: ["*"] # actions
---
# Attching Role : roboshop-lead with RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
# This role binding allows "suresh" to read pods in the "roboshop" namespace.
# You need to already have a Role named "roboshop-lead" in that namespace.
kind: RoleBinding
metadata:
  name: suresh
  namespace: roboshop
subjects:
# You can specify more than one "subject"
- kind: User
  name: suresh # "name" is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  # "roleRef" specifies the binding to a Role / ClusterRole
  kind: Role #this must be Role or ClusterRole
  name:  roboshop-lead # this must match the name of the Role or ClusterRole you wish to bind to
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: roboshop-cluster
rules:
- apiGroups: [""]
  resources: ["persistentvolumes"]
  verbs: ["get", "list", "watch"]
---
# Cluster level Role access
apiVersion: rbac.authorization.k8s.io/v1
# This cluster role binding allows anyone in the "manager" group to read secrets in any namespace.
kind: ClusterRoleBinding
metadata:
  name: roboshop-cluster
subjects:
- kind: User
  name: suresh # Name is case sensitive
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: ClusterRole
  name: roboshop-cluster
  apiGroup: rbac.authorization.k8s.io